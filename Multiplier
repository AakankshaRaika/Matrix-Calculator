# .D IS USED IN THE PLACES WHERE I NEEDED TO USE THE COMMAND FOR DOUBLES.   
#THE C CODE (TAKEN FROM LECTURE SLIDES) SOLUTION IDEA TAKEN FROM LECTURES AND MODIFIED TO MAKE IT EASIER FOR ME TO UNDERSTAND AND PROGRAM.  #1. VOID DGEMM (INT N, DOUBLE* A, DOUBLE* B, DOUBLE* C) #2   { #3.      FOR (INT I = 0; I < N; ++I) #4.        FOR (INT J = 0; J < N; ++J) #5.           { #6.            DOUBLE CIJ = C[I+J*N]; /* CIJ = C[I][J] */ #7.              FOR(INT K = 0; K < N; K++ ) #8.                CIJ += A[I+K*N] * B[K+J*N]; /* CIJ += A[I][K]*B[K][J]$ #9.                C[I+J*N] = CIJ; /* C[I][J] = CIJ */ #10.          } #11. }  
MMULT:         
      SUB     $SP,$SP,12              # PUSH TWO WORDS ON THE STACK         
      SW      $S0,0($SP)         
      SW      $S1,4($SP)         
      SW      $S2,8($SP)  
      LI      $S0,0                   # I = 0 
L1:     
      LI      $S1,0                   # J = 0 
L2:     
      LI      $S2,0                   # K = 0 
INNER:  
      MUL     $T0,$S1,$A3             # T0 = J*N         
      ADD     $T1,$S0,$T0             # T1= I+J*N         
      SLL     $T1,$T1,3               # T1=8*(I+J*N)         
      ADD     $T2,$A2,$T1             # T2 = C[I+J*N]= C[I][J]         
      L.D     $F10,0($T2)             # LOAD C[I][J]  
      MUL     $T3,$S2,$A3             # T3 = K*N         
      ADD     $T4,$S0,$T3             # T4= I+K*N         
      SLL     $T5,$T4,3               # T5=8*(I+K*N)         
      ADD     $T6,$A0,$T4             # T6 = A[I+K*N]=A[I][K]         
      L.D     $F4,0($T6)              # LOAD A[I][K]  
      MUL     $T7,$S1,$A3             # T7 = J*N         
      ADD     $T8,$S2,$T7             # T8= K+J*N         
      SLL     $T9,$T8,3               # T9=8*(K+J*N)         
      ADD     $T10,$A1,$T9            # T10 = B[K+J*N]=B[K][J]         
      L.D     $F6,0($T10)             # LOAD B[K][J]  
      MUL.D   $F8,$F4,$F6             # A[I][K] * B[K][J]         
      ADD.D   $F10,$F10,$F8           # C[I][J] = C[I][J] + A[I][K] * $         
      ADD     $S2,$S2,1               # K++ AND TEST INNER LOOP CONDIT$         
      BNE     $S2,$A3,INNER           #         
      ADD     $T1,$T0,$S1             # I*N+J         
      SLL     $T1,$T1,3               # 8*(I*N+J)         
      ADD     $S2,$T1,$A2             # ADDRESS OF C[I][J]         
      S.D     $F10,0($T2)             # STORE C[I][J]  
      ADD     $S1,$S1,1               # J++ AND TEST LOOP CONDITION         
      BNE     $S1,$A3,L2         
      ADD     $S0,$S0,1               # I++ AND TEST LOOP CONDITION         
      BNE     $S0,$A3,L1 
  EXIT:   
      LW      $S0,0($SP)              # RESTORE REGISTERS $S0,$S1         
      LW      $S1,4($SP)         
      LW      $S2,8($SP)         
      ADD     $SP,$SP,12              # POP STACK         
      JR      $RA 
